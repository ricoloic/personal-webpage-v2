{
    "title": "React boilerplate",
    "references": "References",
    "pages": {
        "home": "Rico Generative Arts",
        "sketches": "Sketches",
        "sketchesMouseMovement": "Mouse Movements",
        "sketchesMouseMovementDescription": "Sketches utilising mouse movement",
        "sketchesStatic": "Statics",
        "sketchesStaticDescription": "Sketches that finish by being static",
        "sketchesDynamic": "Dynamics",
        "sketchesDynamicDescription": "Sketches that are always dynamic",
        "sketchesBesierCurve": "Besier Curves",
        "sketchesBesierCurveDescription": "Sketches created using Besier Curves",

        "fractalTree": "Fractal Tree",
        "blackHole": "Black Hole",
        "besierQuadraticCurve": "Besier Quadratic Curve",
        "besierCubicCurve": "Besier Cubic Curve",
        "caveGeneration":"Cave Generation",
        "metaBalls": "Meta Balls",
        "mouseFollow": "Mouse Follow",
        "mouseConfetti": "Mouse Confetti",
        "flocking": "Flocking",
        "flowField": "Flow Field",
        "circularMotion": "Circular Motion",
        "timesTable": "Times Table",
        "chaosGame": "Chaos Game",
        "maurerRose": "Maurer Rose",
        "pong": "Pong",
        "rayCasting": "Ray Casting",
        "mazeGeneration": "Maze Generation"
    },
    "sketches": {
        "fractalTree": "Fractal Tree",
        "blackHole": "Black Hole",
        "besierCubicCurve": "Besier Cubic Curve",
        "besierQuadraticCurve": "Besier Quadratic Curve",
        "caveGeneration":"Cave Generation",
        "mouseFollow": "Mouse Follow",
        "mouseConfetti": "Mouse Confetti",
        "metaBalls": "Meta Balls",
        "flocking": "Flocking",
        "flowField": "Flow Field",
        "circularMotion": "Circular Motion",
        "timesTable": "Times Table",
        "chaosGame": "Chaos Game",
        "maurerRose": "Maurer Rose",
        "pong": "Pong",
        "rayCasting": "Ray Casting",
        "mazeGeneration": "Maze Generation"
    },
    "buttons": {
        "viewCode": "View Code"
    }
}
